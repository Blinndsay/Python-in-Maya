  #for selected shaders create an AO node with 16 samples 4 max distance bright 0.8, 0.8, 0.8 and connect it's outValueR to Diffuse.  
  #for all the selected maya software shaders, User must select these.  
  #make a function to be run with singleAO       
  def singleAO():  
    #Import the maya cmds module to run maya commands in Python  
    from maya import cmds  
    #create a variable and assign it to all the software shaders of the selected shaders  
    swareShaders = cmds.ls(type="lambert", selection=True)    
   print swareShaders  
    #create a variable and assign it to all the mia_material_x_passes of the selected shaders  
    miaShaders = cmds.ls(type="mia_material_x_passes", selection=True)  
    #for each software shader do the following  
    for each in swareShaders:  
      #make a fast occlusion node  
      objectName = cmds.shadingNode("mib_fast_occlusion", asTexture=True )  
      #set the samples/max dist./bright value as per NK docs  
      cmds.setAttr(objectName + ".samples", 16)  
      cmds.setAttr(objectName + ".max_distance", 4)  
      cmds.setAttr(objectName + ".bright", 0.8, 0.8, 0.8, type="double3")  
      cmds.connectAttr(objectName +".outValue.outValueR", each + ".diffuse", force=True)  
    #for all the miaMaterial X Passes shaders do the following         
    for mia in miaShaders:  
      #Turns on AO if it is off, set max distance, dark and samples.  
      if (mia + ".ao_on", 0):    
        cmds.setAttr(mia + ".ao_on", 1)  
      if (mia + ".ao_distance", not 4):     
        cmds.setAttr(mia + ".ao_distance", 4)  
      if (mia + ".ao_dark", not 0.0, 0.0, 0.0):  
        cmds.setAttr(mia + ".ao_dark", 0.0, 0.0, 0.0)  
      if (mia + ".ao_samples", not 16):  
        cmds.setAttr(mia + ".ao_samples", 16)  
      #Warns User if they have selected wrong type of shader.  
      if not swareShaders or miaShaders:  
        print "Sorry Please select correct Shadertype"  
  #make a function to be Run with "allAO()"        
  def allAO():  
    #Import the maya cmds module to run maya commands in Python  
    from maya import cmds  
    #Make the sware and mia Shader variables for this function  
    swareShaders = cmds.ls(type="lambert", selection=True)  
    miaShaders = cmds.ls(type="mia_material_x_passes", selection=True)  
    #make a variable for all the selected mia and software shaders    
    allShaders = miaShaders and swareShaders  
    #for all the selected mia/sware shaders do the following  
    for both in allShaders:  
      #run the function singleAO() on all the shaders.  
     singleAO()  
  #executes the allAO() function.       
  allAO()        
